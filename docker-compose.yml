version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --entrypoints.webalt.address=:5678
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --log.level=INFO
    environment:
      - TZ=${TZ}
    ports:
      - "5678:5678"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - n8n-network
    labels:
      - "traefik.enable=true"
      # Security headers middleware
      - "traefik.http.middlewares.sec-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.sec-headers.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.sec-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.middlewares.rate100.ratelimit.average=100"
      - "traefik.http.middlewares.rate100.ratelimit.burst=200"

  postgres:
    image: postgres:16-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1g

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_EDITOR_BASE_URL=http://${N8N_HOST}:5678/
      - WEBHOOK_URL=http://${N8N_HOST}:5678/
      - N8N_SECURE_COOKIE=false
      - GENERIC_TIMEZONE=${TZ}
      - N8N_DIAGNOSTICS_ENABLED=false
      - TZ=${TZ}
    volumes:
      - ./n8n:/home/node/.n8n
    networks:
      - n8n-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5678/healthz"]
      interval: 15s
      timeout: 10s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 1.5g
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n-5678.rule=PathPrefix(`/`)"
      - "traefik.http.routers.n8n-5678.entrypoints=webalt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n-5678.middlewares=sec-headers@docker,compress@docker,rate100@docker"

networks:
  n8n-network:
    driver: bridge